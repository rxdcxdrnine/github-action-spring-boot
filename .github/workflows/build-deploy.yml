name: Build and Deploy for Continuous Deployment

on:
  pull_request:
    branches: [ backend-dev ]
    types: [ closed ]

permissions:
  contents: read

jobs:
  build:
    if: github.event.pull_request.merged
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./backend

    steps:
    ## gradle tasks
    - uses: actions/checkout@v3
    
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Create application-prod.properties
      run: |
        cd ./src/main/resources
        touch ./application-prod.properties
        echo spring.datasource.url="$DATASOURCE_URL" >> ./application-prod.properties
        echo spring.datasource.username="$DATASOURCE_USERNAME" >> ./application-prod.properties
        echo spring.datasource.password="$DATASOURCE_PASSWORD" >> ./application-prod.properties
      env:
        DATASOURCE_URL: ${{ secrets.DATASOURCE_URL }}
        DATASOURCE_USERNAME: ${{ secrets.DATASOURCE_USERNAME }}
        DATASOURCE_PASSWORD: ${{ secrets.DATASOURCE_PASSWORD }}

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    - name: Build with Gradle
      run: ./gradlew clean build -x test

    ## docker tasks
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: ./backend
        push: true
        tags: rxdcxdrnine/airbnb:latest

  deploy:
    if: github.event.pull_request.merged
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Docker Pull and Run on EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: | 
          sudo docker pull rxdcxdrnine/airbnb:latest
          sudo docker stop airbnb-server && sudo docker rm airbnb-server
          sudo docker run -d --name airbnb-server -p 8080:8080 rxdcxdrnine/airbnb:latest
